pipeline {
    agent any
    tools {
        maven'M2_HOME'
    }

    stages {
         stage('sonarqube scan') {
           agent {docker { image 'maven:3-amazoncorretto-17-debian' }}
            steps {
                withSonarQubeEnv('sonarserver'){

                sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=mbakamarco_week16'
              }  
            }
        }  
        stage('maven commands') {
            steps {
                sh 'mvn clean test compile install package'

            }
            
        } 
        stage ('upload artifact'){
            steps {
                sh 'curl -uadmin:AP5wbmom5TGkdbjABPgTVihehCS -T \
                target/bio*jar \
                "http://52.70.62.57:8081/artifactory/geoapp/"'
            }
        }
       stage ('image build') {
        steps {
            sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 765268743960.dkr.ecr.us-east-1.amazonaws.com'
            sh 'docker build -t geoapp .'
            
        }
       }
       stage ('push image') {
        steps {
            sh 'docker tag geoapp:latest 765268743960.dkr.ecr.us-east-1.amazonaws.com/geoapp:${BUILD_ID}'
            sh 'docker push 765268743960.dkr.ecr.us-east-1.amazonaws.com/geoapp:${BUILD_ID}'

        }
       }
    }
}
